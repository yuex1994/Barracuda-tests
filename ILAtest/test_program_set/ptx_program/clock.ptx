//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-22781540
// Cuda compilation tools, release 9.0, V9.0.176
// Based on LLVM 3.4svn
//

.version 6.0
.target sm_30
.address_size 64

.shared .align 4 .b8 shared[];

.entry _Z14timedReductionPKfPfPl(
	.param .u64 _Z14timedReductionPKfPfPl_param_0,
	.param .u64 _Z14timedReductionPKfPfPl_param_1,
	.param .u64 _Z14timedReductionPKfPfPl_param_2
)
{
	.reg .pred 	%p<16>;
	.reg .f32 	%f<16>;
	.reg .b32 	%r<14>;
	.reg .b64 	%rd<19>;


	ld.param.u64 	%rd2, [_Z14timedReductionPKfPfPl_param_0];
	ld.param.u64 	%rd3, [_Z14timedReductionPKfPfPl_param_1];
	ld.param.u64 	%rd4, [_Z14timedReductionPKfPfPl_param_2];
	cvta.to.global.u64 	%rd1, %rd4;
	mov.u32 	%r1, %ctaid.x;
	mov.u32 	%r2, %tid.x;
	setp.ne.s32	%p2, %r2, 0;
	@%p2 bra 	BB0_2;

	// inline asm
	mov.u32 	%r4, %clock;
	// inline asm
	cvt.s64.s32	%rd5, %r4;
	mul.wide.s32 	%rd6, %r1, 8;
	add.s64 	%rd7, %rd1, %rd6;
	st.global.u64 	[%rd7], %rd5;

BB0_2:
	cvta.to.global.u64 	%rd8, %rd2;
	mul.wide.s32 	%rd9, %r2, 4;
	add.s64 	%rd10, %rd8, %rd9;
	ld.global.f32 	%f7, [%rd10];
	shl.b32 	%r5, %r2, 2;
	mov.u32 	%r6, shared;
	add.s32 	%r3, %r6, %r5;
	st.shared.f32 	[%r3], %f7;
	mov.u32 	%r7, %ntid.x;
	add.s32 	%r8, %r7, %r2;
	mul.wide.u32 	%rd11, %r8, 4;
	add.s64 	%rd12, %rd8, %rd11;
	ld.global.f32 	%f8, [%rd12];
	shl.b32 	%r9, %r8, 2;
	add.s32 	%r10, %r6, %r9;
	st.shared.f32 	[%r10], %f8;
	bar.sync 	0;
	setp.gt.s32	%p3, %r2, 31;
	@%p3 bra 	BB0_5;

	ld.shared.f32 	%f9, [%r3];
	ld.shared.f32 	%f1, [%r3+128];
	setp.geu.f32	%p4, %f1, %f9;
	@%p4 bra 	BB0_5;

	st.shared.f32 	[%r3], %f1;

BB0_5:
	bar.sync 	0;
	setp.gt.s32	%p5, %r2, 15;
	@%p5 bra 	BB0_8;

	ld.shared.f32 	%f10, [%r3];
	ld.shared.f32 	%f2, [%r3+64];
	setp.geu.f32	%p6, %f2, %f10;
	@%p6 bra 	BB0_8;

	st.shared.f32 	[%r3], %f2;

BB0_8:
	bar.sync 	0;
	setp.gt.s32	%p7, %r2, 7;
	@%p7 bra 	BB0_11;

	ld.shared.f32 	%f11, [%r3];
	ld.shared.f32 	%f3, [%r3+32];
	setp.geu.f32	%p8, %f3, %f11;
	@%p8 bra 	BB0_11;

	st.shared.f32 	[%r3], %f3;

BB0_11:
	bar.sync 	0;
	setp.gt.s32	%p9, %r2, 3;
	@%p9 bra 	BB0_14;

	ld.shared.f32 	%f12, [%r3];
	ld.shared.f32 	%f4, [%r3+16];
	setp.geu.f32	%p10, %f4, %f12;
	@%p10 bra 	BB0_14;

	st.shared.f32 	[%r3], %f4;

BB0_14:
	bar.sync 	0;
	setp.gt.s32	%p11, %r2, 1;
	@%p11 bra 	BB0_17;

	ld.shared.f32 	%f13, [%r3];
	ld.shared.f32 	%f5, [%r3+8];
	setp.geu.f32	%p12, %f5, %f13;
	@%p12 bra 	BB0_17;

	st.shared.f32 	[%r3], %f5;

BB0_17:
	bar.sync 	0;
	setp.gt.s32	%p13, %r2, 0;
	@%p13 bra 	BB0_20;

	ld.shared.f32 	%f14, [%r3];
	ld.shared.f32 	%f6, [%r3+4];
	setp.geu.f32	%p14, %f6, %f14;
	@%p14 bra 	BB0_20;

	st.shared.f32 	[%r3], %f6;

BB0_20:
	@%p2 bra 	BB0_22;

	cvta.to.global.u64 	%rd13, %rd3;
	ld.shared.f32 	%f15, [shared];
	mul.wide.s32 	%rd14, %r1, 4;
	add.s64 	%rd15, %rd13, %rd14;
	st.global.f32 	[%rd15], %f15;

BB0_22:
	setp.eq.s32	%p1, %r2, 0;
	bar.sync 	0;
	@!%p1 bra 	BB0_24;
	bra.uni 	BB0_23;

BB0_23:
	// inline asm
	mov.u32 	%r11, %clock;
	// inline asm
	cvt.s64.s32	%rd16, %r11;
	mov.u32 	%r12, %nctaid.x;
	add.s32 	%r13, %r12, %r1;
	mul.wide.u32 	%rd17, %r13, 8;
	add.s64 	%rd18, %rd1, %rd17;
	st.global.u64 	[%rd18], %rd16;

BB0_24:
	ret;
}


